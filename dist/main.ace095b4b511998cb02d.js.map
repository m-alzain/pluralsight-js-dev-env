{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/api/baseUrl.js","webpack:///./src/api/userApi.js","webpack:///./src/index.js"],"names":["g","this","Function","e","window","module","exports","getBaseUrl","name","url","location","href","replace","results","RegExp","exec","decodeURIComponent","getQueryStringParameterByName","baseUrl","getUsers","fetch","then","onSuccess","onError","deleteUser","id","request","Request","method","response","json","error","console","log","result","usersBody","forEach","user","firstName","lastName","email","global","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","attributes","value","row","parentNode","removeChild"],"mappings":";;;;4CAAA,IAAIA,EAGJA,EAAK,WACJ,OAAOC,KADH,GAIL,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXC,SAAqBJ,EAAII,QAOrCC,EAAOC,QAAUN,G;;;;6DClBF,SAASO,IACpB,OAGF,SAAuCC,EAAMC,GACtCA,IAAKA,EAAML,OAAOM,SAASC,MAChCH,EAAOA,EAAKI,QAAQ,UAAW,QAC/B,IACIC,EADQ,IAAIC,OAAO,OAASN,EAAO,qBACnBO,KAAKN,GACzB,OAAKI,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,KARdK,CAA8B,cAAgB,yBAA2B,+CAFpF,gD;;;;0ECAA,wMAGMC,EAAUX,oBAET,SAASY,IACd,OAQOC,MAAMF,EARF,SAQiBG,KAAKC,EAAWC,GALvC,SAASC,EAAWC,GACzB,OAQWhB,EARA,SAAD,OAAUgB,GASdC,EAAU,IAAIC,QAAQT,EAAUT,EAAK,CACzCmB,OAAQ,WAGHR,MAAMM,GAASL,KAAKC,EAAWC,GALxC,IAAad,EACLiB,EAOR,SAASJ,EAAUO,GACjB,OAAOA,EAASC,OAGlB,SAASP,EAAQQ,GACfC,QAAQC,IAAIF,K;;;;;;;;uDC/Bd,8GAKAZ,qBAAWE,MAAK,SAAAa,GACd,IAAIC,EAAY,GAEhBD,EAAOE,SAAQ,SAAAC,GACbF,GAAS,+CACoBE,EAAKZ,GADzB,2DAEDY,EAAKZ,GAFJ,4BAGDY,EAAKC,UAHJ,4BAIDD,EAAKE,SAJJ,4BAKDF,EAAKG,MALJ,yBASXC,EAAOC,SAASC,eAAe,SAASC,UAAYT,EAEpD,IAAMU,EAAcJ,EAAOC,SAASI,uBAAuB,cAI3DC,MAAMC,KAAKH,GAAa,SAAAI,GACtBA,EAAKC,QAAU,SAASC,GACtB,IAAMC,EAAUD,EAAME,OACtBF,EAAMG,iBACN9B,qBAAW4B,EAAQG,WAAW,WAAWC,OACzC,IAAMC,EAAML,EAAQM,WAAWA,WAC/BD,EAAIC,WAAWC,YAAYF,W","file":"main.ace095b4b511998cb02d.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/* eslint-disable no-useless-escape */\nexport default function getBaseUrl() {\n    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://mysterious-dawn-16770.herokuapp.com/';\n  }\n\n  function getQueryStringParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n","import 'whatwg-fetch';\nimport getBaseUrl from './baseUrl';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers() {\n  return get('users');\n}\n\nexport function deleteUser(id) {\n  return del(`users/${id}`);\n}\n\nfunction get(url) {\n  return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\n// Can't call func delete since reserved word.\nfunction del(url) {\n  const request = new Request(baseUrl + url, {\n    method: 'DELETE'\n  });\n\n  return fetch(request).then(onSuccess, onError);\n}\n\nfunction onSuccess(response) {\n  return response.json();\n}\n\nfunction onError(error) {\n  console.log(error); // eslint-disable-line no-console\n}\n","import './index.css';\n\nimport {getUsers, deleteUser} from './api/userApi';\n\n// Populate table of users via API call.\ngetUsers().then(result => {\n  let usersBody = \"\";\n\n  result.forEach(user => {\n    usersBody+= `<tr>\n      <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n      <td>${user.id}</td>\n      <td>${user.firstName}</td>\n      <td>${user.lastName}</td>\n      <td>${user.email}</td>\n      </tr>`\n  });\n\n  global.document.getElementById('users').innerHTML = usersBody;\n\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\n\n  // Must use array.from to create a real array from a DOM collection\n  // getElementsByClassname only returns an \"array like\" object\n  Array.from(deleteLinks, link => {\n    link.onclick = function(event) {\n      const element = event.target;\n      event.preventDefault();\n      deleteUser(element.attributes[\"data-id\"].value);\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n    };\n  });\n});\n"],"sourceRoot":""}